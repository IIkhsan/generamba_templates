//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit

protocol {{ module_info.name }}DisplayLogic: class {
    
}

final class {{ module_info.name }}ViewController: UIViewController, {{ module_info.name }}DisplayLogic {
    var interactor: {{ module_info.name }}BusinessLogic?
    var router: (NSObjectProtocol & {{ module_info.name }}RoutingLogic & {{ module_info.name }}DataPassing)?

    //MARK: Outlets

    //MARK: Object Lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    //MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = {{ module_info.name }}Interactor()
        let presenter = {{ module_info.name }}Presenter()
        let router = {{ module_info.name }}Router()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    //MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    //MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        fetchData()
        
    }

    //MARK: - Interactor requests

    func fetchData() {
        // let request = ContactView.ShowContact.Request()
        // interactor?.fetchContact(request: request)
    }

}
